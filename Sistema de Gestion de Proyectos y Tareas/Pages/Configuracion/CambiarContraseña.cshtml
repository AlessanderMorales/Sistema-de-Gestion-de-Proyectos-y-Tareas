@page
@model Sistema_de_Gestion_de_Proyectos_y_Tareas.Pages.Configuracion.CambiarContraseñaModel
@{
    ViewData["Title"] = "Cambiar Contraseña";
    var requiereCambio = TempData["RequiereCambioContraseña"] as string;
}

<style>
    :root {
        --accent-red: #D32F2F;
        --accent-orange: #FF5722;
        --accent-gold: #FFD700;
        --text-primary: #f5f5f7;
}

    .title-volcanic {
  background: linear-gradient(45deg, var(--accent-gold), var(--accent-orange));
   -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
   font-weight: 700;
   border-bottom: 2px solid rgba(255,255,255,0.1);
     padding-bottom: 0.5rem;
        margin-bottom: 2rem;
    }

    .form-control {
   background-color: #3a3a40;
        color: var(--text-primary);
        border: 1px solid #555;
        border-radius: 8px;
        padding: 0.75rem 1rem;
    }
    .form-control:focus {
        background-color: #4a4a50;
        color: var(--text-primary);
   border-color: var(--accent-orange);
    box-shadow: 0 0 0 0.25rem rgba(255, 87, 34, 0.3);
  }
    
    .form-label {
        color: var(--text-primary);
     font-weight: 500;
    }

    .text-danger {
        color: #ff5252 !important;
 font-weight: 500;
    }
    
    .form-container {
        max-width: 600px;
    }

    .btn-volcanic-primary {
        background: linear-gradient(45deg, var(--accent-red), var(--accent-orange));
        border: none;
        color: white;
        font-weight: bold;
   padding: 12px 25px;
    border-radius: 8px;
   transition: all 0.3s ease;
 }
  .btn-volcanic-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(255, 87, 34, 0.4);
    }

    .btn-volcanic-secondary {
  background-color: transparent;
        border: 2px solid #6c757d;
        color: #ced4da;
        font-weight: bold;
  padding: 10px 25px;
        border-radius: 8px;
        transition: all 0.3s ease;
    }
    .btn-volcanic-secondary:hover {
      background-color: #6c757d;
        color: white;
        border-color: #6c757d;
    }
    
    .info-box {
        background-color: #e3f2fd;
     border-left: 4px solid #2196f3;
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 5px;
        color: #0d47a1;
    }
    
    .info-box strong {
    display: block;
        margin-bottom: 5px;
  }

    .password-requirements {
      background-color: #2c2c31;
        padding: 15px;
  border-radius: 8px;
margin-bottom: 20px;
        border-left: 4px solid var(--accent-gold);
    }

    .password-requirements ul {
        margin: 0;
        padding-left: 20px;
        color: var(--text-primary);
    }

    .password-requirements li {
   margin-bottom: 5px;
    }
</style>

@if (!string.IsNullOrEmpty(requiereCambio))
{
    <div class="modal fade show" id="requiereCambioModal" tabindex="-1" style="display: block;" aria-modal="true">
     <div class="modal-dialog modal-dialog-centered">
<div class="modal-content volcanic-modal" style="background-color: #2c2c31; color: #f5f5f7; border: 1px solid rgba(255,255,255,0.2); border-radius: 15px;">
      <div class="modal-header" style="border-bottom: 1px solid #FF5722;">
    <h5 class="modal-title text-white">?? Cambio de Contraseña Requerido</h5>
</div>
 <div class="modal-body text-white">
         <p><strong>@requiereCambio</strong></p>
   <p>Esta es una contraseña temporal generada automáticamente. Por tu seguridad, debes crear una contraseña nueva y segura.</p>
</div>
         <div class="modal-footer" style="border-top: 1px solid rgba(255,255,255,0.1);">
          <!-- ? MODIFICADO: Llama a función JavaScript -->
          <button type="button" class="btn btn-volcanic-primary" onclick="cerrarModalYEnfocar()">Entendido, Cambiar Ahora</button>
     </div>
  </div>
        </div>
  </div>
    <div class="modal-backdrop fade show" id="modalBackdrop"></div>
}

@if (!string.IsNullOrEmpty(TempData["MensajeExito"] as string))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
  <strong>? Éxito:</strong> @TempData["MensajeExito"]
 <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
}

@if (!string.IsNullOrEmpty(TempData["MensajeError"] as string))
{
<div class="alert alert-danger alert-dismissible fade show" role="alert">
      <strong>? Error:</strong> @TempData["MensajeError"]
     <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h1 class="title-volcanic">@ViewData["Title"]</h1>

<div class="row">
  <div class="col-md-8 form-container" id="formContainer">
    <div class="info-box">
       <strong>Seguridad de la Contraseña</strong>
 Cambia tu contraseña regularmente para mantener tu cuenta segura.
  </div>

     <div class="password-requirements">
       <strong style="color: var(--accent-gold);">Requisitos de la contraseña:</strong>
         <ul>
 <li>Entre 8 y 15 caracteres</li>
 <li>Al menos una letra mayúscula</li>
      <li>Al menos una letra minúscula</li>
      <li>Al menos un número</li>
       <li>Al menos un carácter especial</li>
    </ul>
   </div>
        
<form method="post" id="cambiarContraseñaForm">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

 <div class="mb-3">
     <label asp-for="Input.ContraseñaActual" class="form-label"></label>
      <!-- ? AGREGADO: id para enfocar -->
      <input asp-for="Input.ContraseñaActual" class="form-control" type="password" id="contraseñaActualInput" />
          <span asp-validation-for="Input.ContraseñaActual" class="text-danger"></span>
  </div>

<div class="mb-3">
      <label asp-for="Input.NuevaContraseña" class="form-label"></label>
    <input asp-for="Input.NuevaContraseña" class="form-control" type="password" />
    <span asp-validation-for="Input.NuevaContraseña" class="text-danger"></span>
   </div>

        <div class="mb-3">
     <label asp-for="Input.ConfirmarContraseña" class="form-label"></label>
   <input asp-for="Input.ConfirmarContraseña" class="form-control" type="password" />
   <span asp-validation-for="Input.ConfirmarContraseña" class="text-danger"></span>
        </div>

    <div class="mt-4">
    <button type="submit" class="btn btn-volcanic-primary">Cambiar Contraseña</button>
        <a asp-page="/Index" class="btn btn-volcanic-secondary">Cancelar</a>
   </div>
      </form>
    </div>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    
    <!-- ? NUEVO: Script para cerrar modal y enfocar en formulario -->
    <script>
        function cerrarModalYEnfocar() {
// Ocultar modal
            var modal = document.getElementById('requiereCambioModal');
            var backdrop = document.getElementById('modalBackdrop');
    
        if (modal) {
     modal.style.display = 'none';
      modal.classList.remove('show');
   }
 
            if (backdrop) {
    backdrop.remove();
            }
          
       // Restaurar scroll del body
            document.body.style.overflow = 'auto';
   
   // Hacer scroll suave hacia el formulario
            setTimeout(function() {
  var formContainer = document.getElementById('formContainer');
      if (formContainer) {
       formContainer.scrollIntoView({ 
     behavior: 'smooth', 
    block: 'start' 
          });
           }
         
           // Enfocar en el primer campo después del scroll
         setTimeout(function() {
     var primerCampo = document.getElementById('contraseñaActualInput');
         if (primerCampo) {
         primerCampo.focus();
    // Agregar efecto visual temporal
    primerCampo.style.boxShadow = '0 0 15px rgba(255, 87, 34, 0.6)';
 setTimeout(function() {
                primerCampo.style.boxShadow = '';
      }, 2000);
   }
                }, 500);
            }, 100);
        }
        
   // ? Prevenir cierre del modal al hacer clic fuera
        document.addEventListener('DOMContentLoaded', function() {
       var modal = document.getElementById('requiereCambioModal');
     if (modal) {
  // Agregar estilo para prevenir scroll del body
 document.body.style.overflow = 'hidden';
  
           // Prevenir cierre al hacer clic en el backdrop
          var backdrop = document.getElementById('modalBackdrop');
    if (backdrop) {
   backdrop.addEventListener('click', function(e) {
         e.preventDefault();
            e.stopPropagation();
     // Opcional: agregar efecto de "shake" al modal para indicar que no se puede cerrar
          modal.querySelector('.modal-dialog').classList.add('shake');
    setTimeout(function() {
       modal.querySelector('.modal-dialog').classList.remove('shake');
    }, 500);
        });
  }
      }
        });
    </script>
    
    <style>
        /* ? Animación de shake para el modal */
        @@keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-10px); }
            20%, 40%, 60%, 80% { transform: translateX(10px); }
        }
   
        .shake {
        animation: shake 0.5s;
        }
  </style>
}
