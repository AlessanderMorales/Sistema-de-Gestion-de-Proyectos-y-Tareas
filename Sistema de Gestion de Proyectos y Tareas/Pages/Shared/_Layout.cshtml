@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@using System.Security.Claims
@{
    var tokens = Antiforgery.GetAndStoreTokens(ViewContext.HttpContext);
    var user = Context.User;
    var isAuthenticated = user.Identity != null && user.Identity.IsAuthenticated;
    var username = isAuthenticated ? user.FindFirst(ClaimTypes.Name)?.Value : null;
    var role = isAuthenticated ? user.FindFirst(ClaimTypes.Role)?.Value : null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Sistema de Gestión</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <meta name="request-verification-token" content="@tokens.RequestToken" />
    <style>
        /* hide sidebar when not authenticated */
        body.not-authenticated #sidebar-wrapper { display: none; }
        body.not-authenticated #page-content-wrapper { width: 100%; }
    </style>
</head>
<body class="@(isAuthenticated ? string.Empty : "not-authenticated")">
    <div class="d-flex" id="wrapper">
        <div class="bg-white border-end" id="sidebar-wrapper">
            <div class="sidebar-heading text-center py-4">
                <img src="~/Image/Logo.png" alt="Logo de Gestión" style="height:40px; margin-bottom:5px;" />
                <div class="fs-4 fw-bold text-primary">Gestión</div>
            </div>
            <div class="list-group list-group-flush">
                @if (isAuthenticated)
                {
                    <a asp-page="/Index" class="list-group-item list-group-item-action bg-white">Home</a>

                    @if (role == null || role.ToLowerInvariant() != "admin")
                    {
                        <a asp-page="/proyectos/Index" class="list-group-item list-group-item-action bg-white">Proyectos</a>
                        <a asp-page="/Tareas/Index" class="list-group-item list-group-item-action bg-white">Tareas</a>
                    }

                    @if (role != null && (role.ToLowerInvariant() == "admin" || role.ToLowerInvariant() == "jefe de proyecto" || role.ToLowerInvariant() == "supervisor"))
                    {
                        <a asp-page="/Usuarios/Index" class="list-group-item list-group-item-action bg-white">Usuarios</a>
                    }
                }
            </div>
        </div>
        <div id="page-content-wrapper" class="w-100">
            <nav class="navbar navbar-expand-lg navbar-light bg-white border-bottom">
                <div class="container-fluid">
                    <button class="btn btn-primary" id="sidebarToggle">☰</button>
                    <div class="d-flex align-items-center ms-3">
                        <img src="~/Image/Logo.png" alt="Logo" style="height:30px; margin-right:10px;" />
                        <span class="navbar-text fw-bold">Sistema de Gestión</span>
                    </div>
                    <div class="ms-auto d-flex align-items-center">
                        <button class="btn btn-outline-secondary me-2" onclick="toggleDarkMode()">Modo Oscuro</button>
                        @if (isAuthenticated)
                        {
                            <span class="me-3">@username (@role)</span>
                            <button id="logoutBtn" type="button" class="btn btn-outline-danger">Salir</button>
                        }
                        else
                        {
                            <a asp-page="/Account/Login" class="btn btn-outline-primary">Ingresar</a>
                        }
                    </div>
                </div>
            </nav>

            <div class="container-fluid py-4">
                @RenderBody()
            </div>
            <footer class="border-top text-muted py-2 text-center">
                &copy; 2025 - Sistema de Gestión - <a asp-page="/Privacy">Privacy</a>
            </footer>
        </div>
    </div>

    <!-- Generic modal container used by site.js -->
    <div id="appGenericModalPlaceholder"></div>

    <!-- Logout confirmation modal -->
    <div class="modal fade" id="logoutConfirmModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Confirmar cierre de sesión</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <p>¿Seguro que quieres cerrar sesión?</p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            <button id="confirmLogoutBtn" type="button" class="btn btn-danger">Cerrar sesión</button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
    <script>
        const sidebarToggle = document.getElementById('sidebarToggle');
        const wrapper = document.getElementById('wrapper');
        sidebarToggle.addEventListener('click', () => {
            wrapper.classList.toggle('toggled');
        });

        // Logout flow
        (function() {
            const logoutBtn = document.getElementById('logoutBtn');
            const confirmBtn = document.getElementById('confirmLogoutBtn');
            const logoutModalEl = document.getElementById('logoutConfirmModal');
            let logoutModal;
            try { logoutModal = new bootstrap.Modal(logoutModalEl); } catch(e) { logoutModal = null; }

            if (logoutBtn && logoutModal) {
                logoutBtn.addEventListener('click', () => {
                    logoutModal.show();
                });
            }

            if (confirmBtn) {
                confirmBtn.addEventListener('click', async () => {
                    confirmBtn.disabled = true;
                    confirmBtn.textContent = 'Cerrando...';
                    try {
                        // read antiforgery token from meta
                        const tokenMeta = document.querySelector('meta[name="request-verification-token"]');
                        const token = tokenMeta ? tokenMeta.getAttribute('content') : '';

                        const resp = await fetch('/Account/Logout', {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': token,
                                'Content-Type': 'application/x-www-form-urlencoded'
                            },
                            body: ''
                        });

                        // If server responds OK or redirect, reload to show login
                        if (resp.ok || resp.status === 302) {
                            window.location.href = '/Account/Login';
                        } else {
                            window.location.href = '/Account/Login';
                        }
                    } catch (err) {
                        console.error('Logout failed', err);
                        alert('Error al cerrar sesión. Intenta de nuevo.');
                        confirmBtn.disabled = false;
                        confirmBtn.textContent = 'Cerrar sesión';
                    }
                });
            }
        })();
    </script>
</body>
</html>
