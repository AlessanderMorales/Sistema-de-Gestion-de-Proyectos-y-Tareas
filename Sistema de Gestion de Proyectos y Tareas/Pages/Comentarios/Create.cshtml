@page
@model Sistema_de_Gestion_de_Proyectos_y_Tareas.Pages.Comentarios.CreateModel
@{
    ViewData["Title"] = "Nuevo Comentario";
}

<style>
    :root {
        --accent-red: #D32F2F;
        --accent-orange: #FF5722;
        --accent-gold: #FFD700;
        --text-primary: #f5f5f7;
    }

    .title-volcanic {
        background: linear-gradient(45deg, var(--accent-gold), var(--accent-orange));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: 700;
        border-bottom: 2px solid rgba(255,255,255,0.1);
        padding-bottom: 0.5rem;
        margin-bottom: 2rem;
    }

    .form-control, .form-select {
        background-color: #3a3a40;
        color: var(--text-primary);
        border: 1px solid #555;
        border-radius: 8px;
        padding: 0.75rem 1rem;
    }
    .form-control:focus, .form-select:focus {
        background-color: #4a4a50;
        color: var(--text-primary);
        border-color: var(--accent-orange);
        box-shadow: 0 0 0 0.25rem rgba(255, 87, 34, 0.3);
    }
    
    .form-label {
        color: var(--text-primary);
        font-weight: 500;
    }

    .text-danger {
        color: #ff5252 !important;
        font-weight: 500;
    }
    
    .form-container {
        max-width: 700px;
    }

    .btn-volcanic-primary {
        background: linear-gradient(45deg, var(--accent-red), var(--accent-orange));
        border: none;
        color: white;
        font-weight: bold;
        padding: 12px 25px;
        border-radius: 8px;
        transition: all 0.3s ease;
    }
    .btn-volcanic-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(255, 87, 34, 0.4);
    }

    .btn-volcanic-secondary {
        background-color: transparent;
        border: 2px solid #6c757d;
        color: #ced4da;
        font-weight: bold;
        padding: 10px 25px;
        border-radius: 8px;
        transition: all 0.3s ease;
    }
    .btn-volcanic-secondary:hover {
        background-color: #6c757d;
        color: white;
        border-color: #6c757d;
    }
</style>

<h2 class="title-volcanic">@ViewData["Title"]</h2>

<div class="row">
    <div class="col-md-8 form-container">
   <form method="post">
   <div class="form-group mb-3">
    <label asp-for="Comentario.Contenido" class="form-label">Contenido</label>
  <textarea asp-for="Comentario.Contenido" class="form-control" rows="4" placeholder="Escribe tu comentario aqui..."></textarea>
    <span asp-validation-for="Comentario.Contenido" class="text-danger"></span>
    </div>

   <div class="form-group mb-3">
        <label asp-for="Comentario.IdTarea" class="form-label">Tarea</label>
 <select id="tareaSelect" asp-for="Comentario.IdTarea" class="form-select">
        @if (Model.Tareas != null && Model.Tareas.Any())
  {
    var primeraTarea = Model.Tareas.First();
          <option value="@primeraTarea.Id" selected>@primeraTarea.Titulo</option>
         @foreach (var tarea in Model.Tareas.Skip(1))
  {
      <option value="@tarea.Id">@tarea.Titulo</option>
      }
}
        else
        {
   <option value="">No hay tareas disponibles</option>
 }
        </select>
 <span asp-validation-for="Comentario.IdTarea" class="text-danger"></span>
    </div>

    <!-- Selector "Dirigido a" DINÁMICO para TODOS los usuarios -->
    <div class="form-group mb-3">
 <label class="form-label">Dirigido a</label>
        <select id="dirigidoASelect" asp-for="DirigidoAUsuarioId" class="form-select">
  <!-- Opciones generadas dinámicamente por JavaScript -->
  </select>
        <small class="text-muted">
  @if (User.IsInRole("Empleado"))
   {
        <text>Solo puedes enviar comentarios a usuarios asignados a la misma tarea.</text>
     }
   else if (User.IsInRole("JefeDeProyecto"))
   {
      <text>Solo puedes enviar comentarios a empleados asignados a la tarea seleccionada.</text>
  }
        </small>
  </div>

       <div class="mt-4">
 <button type="submit" class="btn btn-volcanic-primary">Guardar Comentario</button>
   <a asp-page="Index" class="btn btn-volcanic-secondary ms-2">Cancelar</a>
     </div>
  </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
   // Mapa de tareas a usuarios (del backend) - PARA TODOS LOS ROLES
  var tareaUsuariosMap = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
          Model.TareaUsuariosMap.ToDictionary(
            kvp => kvp.Key.ToString(),
      kvp => kvp.Value.Select(u => new {
              Id = u.Id,
             Nombres = u.Nombres,
  PrimerApellido = u.PrimerApellido,
     Rol = u.Rol
       }).ToList()
      )
        ));

      // Función para actualizar el selector de destinatarios
  function actualizarDestinatarios() {
      var tareaId = document.getElementById('tareaSelect').value;
            var dirigidoASelect = document.getElementById('dirigidoASelect');

            // Limpiar opciones
      dirigidoASelect.innerHTML = '';

            if (!tareaId || !tareaUsuariosMap[tareaId]) {
         // Si no hay tarea o no hay usuarios, mostrar mensaje
    var option = document.createElement('option');
      option.value = '';
   option.text = 'No hay usuarios disponibles para esta tarea';
       option.disabled = true;
   dirigidoASelect.appendChild(option);
    return;
         }

var usuarios = tareaUsuariosMap[tareaId];

     if (usuarios.length === 0) {
     var option = document.createElement('option');
    option.value = '';
 option.text = 'No hay usuarios asignados a esta tarea';
      option.disabled = true;
       dirigidoASelect.appendChild(option);
         return;
 }

   // Agregar usuarios disponibles
   usuarios.forEach(function(usuario, index) {
         var option = document.createElement('option');
          option.value = usuario.Id;

   var nombreCompleto = usuario.Nombres + ' ' + usuario.PrimerApellido;
      var etiqueta = usuario.Rol === 'JefeDeProyecto' ? ' (Jefe de Proyecto)' : ' (Empleado)';

    option.text = nombreCompleto + etiqueta;

     // Seleccionar el primero por defecto
       if (index === 0) {
           option.selected = true;
      }

      dirigidoASelect.appendChild(option);
            });
        }

   // Ejecutar al cargar la página
        document.addEventListener('DOMContentLoaded', function() {
      actualizarDestinatarios();

   // Ejecutar cuando cambie la tarea seleccionada
     document.getElementById('tareaSelect').addEventListener('change', actualizarDestinatarios);
  });
    </script>
}